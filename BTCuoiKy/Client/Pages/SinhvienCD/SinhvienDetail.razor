@page "/sinhviendetail"
@page "/sinhviendetail/{id:int}"
@using BTCuoiKy.Shared
@inject ISinhvienService SinhvienServices
@inject NavigationManager NavigationManager
@if (Id == null)
{
    <PageTitle>Create a new student</PageTitle>
    <h3>Create a new student</h3>
}
else
{
    <PageTitle>Edit @student.Name</PageTitle>
    <h3>Edit @student.Name</h3>
}
<EditForm Model="student" OnSubmit="HandleSubmit">
    <div>
        <label for="hoten">Tên học sinh</label>
        <InputText id="hoten" @bind-Value="student.Name" class="form-control"></InputText>
    </div>
    <div>
        <label for="MSSV">MSSV</label>
        <InputNumber id="MSSV" @bind-Value="student.MSSV" class="form-control"></InputNumber>
    </div>
    <div>
        <label for="Gender">Gioi tinh</label>
        <InputText id="Gender" @bind-Value="student.Gender" class="form-control"></InputText>
    </div>
    <div>
        <label for="Email">Email</label>
        <InputText id="Email" @bind-Value="student.Email" class="form-control"></InputText>
    </div>
    
    <div>
        <label for="Birthday">Birthday</label>
        <InputDate id="Birthday" @bind-Value="student.Birthday" class="form-control"></InputDate>
    </div>

    
    <br />
    <button type="submit" class="btn btn-primary">@btnText</button>
    <button type="button" class="btn btn-danger" @onclick="DeleteSinhvien">Delete</button>
    <button type="button" class="btn btn-danger" @onclick="Cancel">Cancel</button>
</EditForm>
@code {
    [Parameter]
    public int? Id { get; set; }

    string btnText = string.Empty;
    SinhvienModel student = new SinhvienModel();
    
    protected override async Task OnInitializedAsync()
    {
        btnText = Id == null ? "Save" : "Update";
    }

    protected override async Task OnParametersSetAsync()
    {
        if (Id != null)
        {
            student = await SinhvienServices.GetSingleSinhvien((int)Id);
        }
       
        
    }

    async Task HandleSubmit()
    {
        if (Id == null)
        {
            await SinhvienServices.CreateSinhvien(student);
        }
        else
        {
            await SinhvienServices.UpdateSinhvien(student);
        }
    }

    async Task DeleteSinhvien()
    {
        await SinhvienServices.DeleteSinhvien(student.Id);
    }
    async Task Cancel()
    {
        NavigationManager.NavigateTo("/sinhvien");
    }
}